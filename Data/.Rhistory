source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
hist(mean_sample)
hist(mean_sample,100)
hist(mean_sample,10)
x = c(0.2, 0.4, 0.31, 0.25)
t.test(x,alternative="greater", mu=0.3)
x = c(0.2, 0.4, 0.31, 0.25, 0.34)
t.test(x,alternative="greater", mu=0.3)
?prctile
1-ecdf(sample_measurement)(0.3)
1-ecdf(mean_sample)(0.3)
1-ecdf(mean_sample)(0.3)
mean_sample <- replicate(100000, {
sample_measurement <- sample(c(0.2, 0.4, 0.31, 0.25),4,replace=T)
mean(sample_measurement)
})
1-ecdf(mean_sample)(0.3)
source('~/.active-rstudio-document')
1-ecdf(mean_sample)(0.3)
hist(mean_sample,10)
wvf <- function(x, n=22) {
hc <- as.xts(rollmax(as.zoo(Cl(x)), k=n, align="right"))
100*(hc-Lo(x))/hc
}
install.packages("quantmod")
X = rnorm(10,0,1)
source('C:/Users/Phili/Dropbox/CDT/ConjugatePriorBenchmark/gridapproxnormalnormalplot.R')
install.packages("boot")
results <- boot(likelihood,mean,R=1000)
library(boot)
results <- boot(likelihood,mean,R=1000)
samplemean <- function(x, d) {
return(mean(x[d]))
}
results <- boot(likelihood,samplemean,R=1000)
results
mean(results)
results.t()
results.t
results[t]
plot(results)
source('C:/Users/Phili/Dropbox/CDT/ConjugatePriorBenchmark/gridapproxnormalnormalplot.R')
source('C:/Users/Phili/Dropbox/CDT/ConjugatePriorBenchmark/gridapproxnormalnormalplot.R')
sample(xprior, 100000, replace = TRUE, prob = ylikelihood)
sample(xprior, 100000, replace = TRUE, prob = likelihood)
X = sample(xprior, 100000, replace = TRUE, prob = likelihood)
results <- boot(X,mean,R=1000)
results <- boot(X,samplemean,R=1000)
plot(results)
sam <- rnorm(10,0,1)
sam
mean(sam)
plot(sam)
mean(sam)
post <- rnorm(mean(sam),1/sqrt(10))
post <- rnorm(10000,mean(sam),1/sqrt(10))
hist(post)
hist(post,100)
hist(post,50)
Y = boot(sam,samplemean,R=10000)
plot(Y)
hist(Y$t,50)
hist(Y$t,50)
hist(Y$t,50, xlim = c(-1,5,1))
hist(Y$t,50, xaxt='n')
axis(side=1, at=c(-1.5, 0, 1))
hist(Y$t,50, xaxt='n')
axis(side=1, at=c(-1.5, 1))
hist(Y$t,xlim=c(-1,5,1))
hist(Y$t,xlim=c(-1.5,1))
Perm = rnorm(100000, 500,200)
Poro = (Perm/(7*10^7))^1/9.61
Perm = rnorm(100000, 500,200)
Poro = (Perm/(7*10^7))^(1/9.61)
hist(Poro,100)
hist(Poro,1000)
hist(Poro,10)
hist(Poro,100)
Perm = rnorm(100000, 500,200)
Poro = log((Perm/(7*10^7))^(1/9.61))
hist(Poro,100)
Perm = rnorm(100000, 500,200)
Poro = ln((Perm/(7*10^7))^(1/9.61))
log(10)
?log
Perm = rnorm(100000, 500,200)
Perm = rnorm(100000, 500,200)
Poro = (Perm/(7*10^7))^(1/9.61)
Perm = rnorm(100000, 500,200)
Poro = (Perm/(7*10^7))^(1/9.61)
PoroLog = log(Poro)
hist(Poro,100)
hist(PoroLog,100)
Perm = rnorm(100000, 500,200)
Poro = (Perm/(7*10^7))^(2)
hist(PoroLog,100)
hist(Poro,100)
Poro = (Perm/(7*10^7))^(1/9.61)
PoroLog = log(Poro)
Perm = rnorm(100000, 500,200)
Poro = (Perm/(7*10^7))^(1/9.61)
PoroLog = log(Poro)
hist(Poro,100)
install.packages("fitdistrplus")
library(fitdistrplus)
fitdist(Poro, "lognormal")
Perm = rnorm(100000, 500,200)
hist(log(Perm),100)
hsit(Perm,100)
hist(Perm,100)
hist(log(Perm),100)
X = rnorm(10,0,1)
samplemean <- function(x, d) {
return(mean(x[d]))
}
sam <- rnorm(10,0,1)
Y = boot(sam,samplemean,R=10000)
library(boot)
Y = boot(sam,samplemean,R=10000)
hist(Y$t,100)
hist(Y$t,50)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
sam <- rnorm(10,0,1)
Y = boot(sam,samplemean,R=10000)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
hist(Y$t,xlim=c(-1.5,1.0),breaks=25)
hist(Y$t,xlim=c(-1.5,1.0),breaks=30)
hist(Y$t,xlim=c(-1.5,1.0),breaks=40)
hist(Y$t,xlim=c(-1.5,1.0),breaks=40)
hist(Y$t,xlim=c(-1.5,1.0),breaks=40)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
hist(Y$t,xlim=c(-1.5,1.0),breaks=45)
hist(Y$t,xlim=c(-1.5,1.0),breaks=30)
hist(Y$t,xlim=c(-1.5,1.0),breaks=10)
hist(Y$t,xlim=c(-1.5,1.0),breaks=30)
hist(Y$t,xlim=c(-1.5,1.0),breaks=30)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
hist(Y$t,xlim=c(-1.5,1.0),breaks=25)
sam <- rnorm(10,0,1)
Y = boot(sam,samplemean,R=10000)
hist(Y$t,xlim=c(-1.5,1.0),breaks=25)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
Y = boot(sam,samplemean,R=10000)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
Y = boot(sam,samplemean,R=10000)
Y = boot(sam,samplemean,R=100000)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
post <- rnorm(10000,mean(sam),1/sqrt(10))
post <- rnorm(100000,mean(sam),1/sqrt(10))
hist(post,xlim=c(-1.5,1.0),breaks=50)
hist(post,xlim=c(-1.5,1.0),breaks=50)
post <- rnorm(100000,mean(sam),1/sqrt(10))
hist(post,xlim=c(-1.5,1.0),breaks=50)
hist(Y$t,xlim=c(-1.5,1.0),breaks=50)
sam = rnorm(10,0,1)
Y = boot(sam,samplemean,R=100000)
library(boot)
Y = boot(sam,samplemean,R=100000)
samplemean <- function(x, d) {
return(mean(x[d]))
}
Y = boot(sam,samplemean,R=100000)
Y
mean(Y$t)
mean(Y$t)
mean(Y$t)
hist(Y$t)
hist(Y$t,100)
?sd
post <- rnorm(100000,mean(sam),1/sqrt(10))
hist(post)
hist(post,100)
hist(Y$t,100)
hist(post,100)
hist(post,1000)
hist(post,100)
sd(Y$t)
st(post)
sd(post)
sd(Y$t)
hist(post,1000)
1/sqrt(10)
Y = boot(sam,samplemean,R=100000)
sd(Y$t)
sd(Y$t)
1/sqrt(10)
Y = boot(sam,samplemean,R=\200000)
Y = boot(sam,samplemean,R=200000)
sd(Y$t)
sd(Y$t)
Y = boot(sam,samplemean,R=500000)
sd(Y$t)
sam = rnorm(100,0,1)
Y = boot(sam,samplemean,R=100000)
samplemean <- function(x, d) {
return(mean(x[d]))
}
Y = boot(sam,samplemean,R=100000)
post <- rnorm(100000,mean(sam),1/sqrt(100))
hist(post,100)
hist(Y$t,100)
mean(Y$t0)
mean(Y$t)
mean(post)
sd(post)
sd(Y$t)
sd(Y$t)
?sd
pop.sd(Y$t)
pop.sd=function(x)(sqrt(var(x)*(length(x)-1)/length(x)))
pop.sd(Y$t)
library(quantmod)
getSymbols("^JKSE",src="yahoo")
JKSE['2014::']
JKSE = JKSE['2014::']
library(quantmod)
getSymbols("^JKSE",src="yahoo")
JKSE.close()
JKSE.close
JKSE$close
View(JKSE)
JKSE$Close
JKSE$JKSE.Close
max22 = runMax(JKSE$JKSE.Close,22)
View(max22)
low = JKSE$JKSE.Low
View(low)
FixVIX = (max22-low)/max22 * 100
View(FixVIX)
JKSE = JKSE['2014::']
FixVIX = FixVIX['2014::']
chartSeries(JKSE)
addTA(FixVIX)
?AddTa
?addTA
addTA
?chartSeries
?addVol
?addVo
addVo()
addVo
clear
addTA(FixVIX, 'bar')
JKSE = JKSE['2015::']
FixVIX = FixVIX['2015::']
chartSeries(JKSE)
addTA(FixVIX, 'bar')
getSymbols("PTBA.JK",src="yahoo")
View(PTBA.JK)
library(quantmod)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
PTBA.JK = PTBA.JK['2015::']
FixVIX = FixVIX['2015::']
chartSeries(JKSE)
chartSeries(PTBA.JK)
addTA(FixVIX, 'bar')
addBBands(n = 20, sd = 2, ma = "SMA", draw = 'bands', on = -1)
addBBands(n = 20, sd = 2, ma = "SMA", draw = 'bands', on = -1)
addBBands(n = 20, sd = 2, ma = "SMA", draw = 'bands', on = -2)
addBBands(n = 20, sd = 2, ma = "SMA", draw = 'bands', on = -3)
addBBands(FixVIX)
library(quantmod)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
PTBA.JK = PTBA.JK['2015::']
FixVIX = FixVIX['2015::']
chartSeries(PTBA.JK)
addTA(FixVIX, 'bar')
library(TTR)
?BBands
FixVIXBB = BBands(FixVIX)
View(FixVIXBB)
library(quantmod)
library(TTR)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
PTBA.JK = PTBA.JK['2015::']
FixVIX = FixVIX['2015::']
View(FixVIX)
library(quantmod)
library(TTR)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
FixVIXBB = BBands(FixVIX)
FixVIXBB = FixVIXBB['2015::']
PTBA.JK = PTBA.JK['2015::']
chartSeries(PTBA.JK)
addTA(FixVIXBB, 'bar')
View(FixVIXBB)
addTA(FixVIXBB)
FixVIX = FixVIXBB['2015::']
addTA(FixVIX)
library(quantmod)
library(TTR)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
FixVIXBB = BBands(FixVIX)
PTBA.JK = PTBA.JK['2015::']
FixVIXBB = FixVIXBB['2015::']
FixVIX = FixVIXBB['2015::']
FixVIX = FixVIX['2015::']
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
FixVIXBB = BBands(FixVIX)
PTBA.JK = PTBA.JK['2015::']
FixVIXBB = FixVIXBB['2015::']
FixVIX = FixVIX['2015::']
chartSeries(PTBA.JK)
addTA(FixVIXBB)
addTA(FixVIX)
addTA(FixVIX, on=-2)
chartSeries(PTBA.JK)
addTA(FixVIXBB)
addTA(FixVIX, on=-3)
View(FixVIXBB)
library(quantmod)
library(TTR)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
FixVIXBB = BBands(FixVIX)
PTBA.JK = PTBA.JK['2015::']
FixVIXBB = FixVIXBB['2015::']
FixVIX = FixVIX['2015::']
View(FixVIXBB)
View(FixVIXBB)
FixVIXBB = c(FixVIXBB$dn, FixVIXBB$up)
View(FixVIXBB)
FixVIXBB = BBands(FixVIX)
View(FixVIXBB)
FixVIXBB = c(FixVIXBB$dn, FixVIXBB$up)
FixVIXBB = BBands(FixVIX)
I
I
FixVIXBB = BBands(FixVIX)
FixVIXBB = cbind(FixVIXBB$dn, FixVIXBB$up)
View(FixVIXBB)
library(quantmod)
library(TTR)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
FixVIXBB = BBands(FixVIX)
PTBA.JK = PTBA.JK['2015::']
FixVIXBB = FixVIXBB['2015::']
FixVIX = FixVIX['2015::']
FixVIXBB = cbind(FixVIXBB$dn, FixVIXBB$up)
chartSeries(PTBA.JK)
addTA(FixVIXBB)
addTA(FixVIX, on=-3)
source('~/.active-rstudio-document')
addTA(FixVIXBB, col='blue')
addTA(FixVIX, col='red', on=-3)
chartSeries(PTBA.JK)
source('~/.active-rstudio-document')
View(FixVIXBB)
blue'
a
source('~/.active-rstudio-document')
addTA(FixVIXBB, col='blue')
View(FixVIXBB)
addTA(FixVIXBB, col='blue', type='h')
addTA(FixVIX, col='red', on=-3, type='h')
PTBA.JK = PTBA.JK['2015::']
FixVIXBB = FixVIXBB['2015::']
FixVIX = FixVIX['2015::']
FixVIXBB = cbind(FixVIXBB$dn, FixVIXBB$up)
chartSeries(PTBA.JK)
addTA(FixVIX, col='red', on=-3, type='h')
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col='blue', type='h')
addTA(FixVIXBB)
addTA(FixVIXBB, col=c('blue','blue'))
source('~/.active-rstudio-document')
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col=c('blue','blue'))
addTA(FixVIX, col='red',on=-4)
max22 = runMax(JKSE$JKSE.Close,22)
low = JKSE$JKSE.Low
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
chartSeries(JKSE)
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col=c('green','green'))
addTA(FixVIX, col='red',on=-4)
source('~/.active-rstudio-document')
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col=c('green','green'))
addTA(FixVIX, col='red',on=-4)
library(quantmod)
library(TTR)
getSymbols("^JKSE",src="yahoo")
max22 = runMax(JKSE$JKSE.Close,22)
low = JKSE$JKSE.Low
FixVIX = (max22-low)/max22 * 100
FixVIXBB = BBands(FixVIX)
JKSE = JKSE['2007::']
FixVIXBB = FixVIXBB['2007::']
FixVIX = FixVIX['2007::']
FixVIXBB = cbind(FixVIXBB$dn, FixVIXBB$up)
chartSeries(JKSE)
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col=c('green','green'))
addTA(FixVIX, col='red',on=-4)
library(quantmod)
library(TTR)
getSymbols("PTBA.JK",src="yahoo")
max22 = runMax(PTBA.JK$PTBA.JK.Close,22)
low = PTBA.JK$PTBA.JK.Low
FixVIX = (max22-low)/max22 * 100
FixVIXBB = BBands(FixVIX)
PTBA.JK = PTBA.JK['2013::']
FixVIXBB = FixVIXBB['2013::']
FixVIX = FixVIX['2013::']
FixVIXBB = cbind(FixVIXBB$dn, FixVIXBB$up)
chartSeries(JKSE)
chartSeries(PTBA.JK)
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col=c('green','green'))
addTA(FixVIX, col='red',on=-4)
PTBA.JK = PTBA.JK['2014::']
FixVIXBB = FixVIXBB['2014::']
FixVIX = FixVIX['20143::']
FixVIXBB = cbind(FixVIXBB$dn, FixVIXBB$up)
chartSeries(PTBA.JK)
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col=c('green','green'))
addTA(FixVIX, col='red',on=-4)
PTBA.JK = PTBA.JK['2015::']
FixVIXBB = FixVIXBB['2015::']
FixVIX = FixVIX['2015::']
FixVIXBB = cbind(FixVIXBB$dn, FixVIXBB$up)
chartSeries(PTBA.JK)
addTA(FixVIX, col='red', type='h')
addTA(FixVIXBB, col=c('green','green'))
addTA(FixVIX, col='red',on=-4)
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
View(Bigmac_perBBL)
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
View(Gold_Oil)
View(Bigmac_perBBL)
Gold_Oil <- subset(Gold_Oil, Gold_Oil$Date >= min(Bigmac_perBBL$Date))
View(Gold_Oil)
write.csv(Gold_Oil, "Gold_Oil_Data.csv", row.names=FALSE)
write.csv(Gold_Oil, "Gold_Oil_Data.csv", row.names=FALSE)
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
source('~/GitHub/Data-Visualization-Udacity/Data/DataCleaning.R')
